// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	models "backend-developer-assignment/app/models"

	mock "github.com/stretchr/testify/mock"

	repositories "backend-developer-assignment/app/repositories"
)

// DebitCardRepository is an autogenerated mock type for the DebitCardRepository type
type DebitCardRepository struct {
	mock.Mock
}

// BeginTx provides a mock function with no fields
func (_m *DebitCardRepository) BeginTx() (repositories.DBTransaction, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for BeginTx")
	}

	var r0 repositories.DBTransaction
	var r1 error
	if rf, ok := ret.Get(0).(func() (repositories.DBTransaction, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() repositories.DBTransaction); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(repositories.DBTransaction)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CommitTx provides a mock function with given fields: tx
func (_m *DebitCardRepository) CommitTx(tx repositories.DBTransaction) error {
	ret := _m.Called(tx)

	if len(ret) == 0 {
		panic("no return value specified for CommitTx")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(repositories.DBTransaction) error); ok {
		r0 = rf(tx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CreateCardDesignTx provides a mock function with given fields: tx, design
func (_m *DebitCardRepository) CreateCardDesignTx(tx repositories.DBTransaction, design *models.DebitCardDesign) error {
	ret := _m.Called(tx, design)

	if len(ret) == 0 {
		panic("no return value specified for CreateCardDesignTx")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(repositories.DBTransaction, *models.DebitCardDesign) error); ok {
		r0 = rf(tx, design)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CreateCardDetailTx provides a mock function with given fields: tx, detail
func (_m *DebitCardRepository) CreateCardDetailTx(tx repositories.DBTransaction, detail *models.DebitCardDetail) error {
	ret := _m.Called(tx, detail)

	if len(ret) == 0 {
		panic("no return value specified for CreateCardDetailTx")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(repositories.DBTransaction, *models.DebitCardDetail) error); ok {
		r0 = rf(tx, detail)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CreateCardStatusTx provides a mock function with given fields: tx, status
func (_m *DebitCardRepository) CreateCardStatusTx(tx repositories.DBTransaction, status *models.DebitCardStatus) error {
	ret := _m.Called(tx, status)

	if len(ret) == 0 {
		panic("no return value specified for CreateCardStatusTx")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(repositories.DBTransaction, *models.DebitCardStatus) error); ok {
		r0 = rf(tx, status)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CreateCardTx provides a mock function with given fields: tx, card
func (_m *DebitCardRepository) CreateCardTx(tx repositories.DBTransaction, card *models.DebitCard) error {
	ret := _m.Called(tx, card)

	if len(ret) == 0 {
		panic("no return value specified for CreateCardTx")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(repositories.DBTransaction, *models.DebitCard) error); ok {
		r0 = rf(tx, card)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteCard provides a mock function with given fields: cardID
func (_m *DebitCardRepository) DeleteCard(cardID string) error {
	ret := _m.Called(cardID)

	if len(ret) == 0 {
		panic("no return value specified for DeleteCard")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(cardID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetCardByID provides a mock function with given fields: cardID
func (_m *DebitCardRepository) GetCardByID(cardID string) (*models.DebitCard, error) {
	ret := _m.Called(cardID)

	if len(ret) == 0 {
		panic("no return value specified for GetCardByID")
	}

	var r0 *models.DebitCard
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*models.DebitCard, error)); ok {
		return rf(cardID)
	}
	if rf, ok := ret.Get(0).(func(string) *models.DebitCard); ok {
		r0 = rf(cardID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.DebitCard)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(cardID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCardDesignByID provides a mock function with given fields: cardID
func (_m *DebitCardRepository) GetCardDesignByID(cardID string) (*models.DebitCardDesign, error) {
	ret := _m.Called(cardID)

	if len(ret) == 0 {
		panic("no return value specified for GetCardDesignByID")
	}

	var r0 *models.DebitCardDesign
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*models.DebitCardDesign, error)); ok {
		return rf(cardID)
	}
	if rf, ok := ret.Get(0).(func(string) *models.DebitCardDesign); ok {
		r0 = rf(cardID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.DebitCardDesign)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(cardID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCardDetailByID provides a mock function with given fields: cardID
func (_m *DebitCardRepository) GetCardDetailByID(cardID string) (*models.DebitCardDetail, error) {
	ret := _m.Called(cardID)

	if len(ret) == 0 {
		panic("no return value specified for GetCardDetailByID")
	}

	var r0 *models.DebitCardDetail
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*models.DebitCardDetail, error)); ok {
		return rf(cardID)
	}
	if rf, ok := ret.Get(0).(func(string) *models.DebitCardDetail); ok {
		r0 = rf(cardID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.DebitCardDetail)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(cardID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCardStatusByID provides a mock function with given fields: cardID
func (_m *DebitCardRepository) GetCardStatusByID(cardID string) (*models.DebitCardStatus, error) {
	ret := _m.Called(cardID)

	if len(ret) == 0 {
		panic("no return value specified for GetCardStatusByID")
	}

	var r0 *models.DebitCardStatus
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*models.DebitCardStatus, error)); ok {
		return rf(cardID)
	}
	if rf, ok := ret.Get(0).(func(string) *models.DebitCardStatus); ok {
		r0 = rf(cardID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.DebitCardStatus)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(cardID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCardWithDetailByID provides a mock function with given fields: cardID
func (_m *DebitCardRepository) GetCardWithDetailByID(cardID string) (*models.DebitCardWithDetail, error) {
	ret := _m.Called(cardID)

	if len(ret) == 0 {
		panic("no return value specified for GetCardWithDetailByID")
	}

	var r0 *models.DebitCardWithDetail
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*models.DebitCardWithDetail, error)); ok {
		return rf(cardID)
	}
	if rf, ok := ret.Get(0).(func(string) *models.DebitCardWithDetail); ok {
		r0 = rf(cardID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.DebitCardWithDetail)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(cardID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCardWithDetailByUserID provides a mock function with given fields: userID
func (_m *DebitCardRepository) GetCardWithDetailByUserID(userID string) ([]*models.DebitCardWithDetail, error) {
	ret := _m.Called(userID)

	if len(ret) == 0 {
		panic("no return value specified for GetCardWithDetailByUserID")
	}

	var r0 []*models.DebitCardWithDetail
	var r1 error
	if rf, ok := ret.Get(0).(func(string) ([]*models.DebitCardWithDetail, error)); ok {
		return rf(userID)
	}
	if rf, ok := ret.Get(0).(func(string) []*models.DebitCardWithDetail); ok {
		r0 = rf(userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.DebitCardWithDetail)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCardsByUserID provides a mock function with given fields: userID
func (_m *DebitCardRepository) GetCardsByUserID(userID string) ([]*models.DebitCard, error) {
	ret := _m.Called(userID)

	if len(ret) == 0 {
		panic("no return value specified for GetCardsByUserID")
	}

	var r0 []*models.DebitCard
	var r1 error
	if rf, ok := ret.Get(0).(func(string) ([]*models.DebitCard, error)); ok {
		return rf(userID)
	}
	if rf, ok := ret.Get(0).(func(string) []*models.DebitCard); ok {
		r0 = rf(userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.DebitCard)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RollbackTx provides a mock function with given fields: tx
func (_m *DebitCardRepository) RollbackTx(tx repositories.DBTransaction) error {
	ret := _m.Called(tx)

	if len(ret) == 0 {
		panic("no return value specified for RollbackTx")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(repositories.DBTransaction) error); ok {
		r0 = rf(tx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateCardDesignTx provides a mock function with given fields: tx, design
func (_m *DebitCardRepository) UpdateCardDesignTx(tx repositories.DBTransaction, design *models.DebitCardDesign) error {
	ret := _m.Called(tx, design)

	if len(ret) == 0 {
		panic("no return value specified for UpdateCardDesignTx")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(repositories.DBTransaction, *models.DebitCardDesign) error); ok {
		r0 = rf(tx, design)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateCardDetail provides a mock function with given fields: detail
func (_m *DebitCardRepository) UpdateCardDetail(detail *models.DebitCardDetail) error {
	ret := _m.Called(detail)

	if len(ret) == 0 {
		panic("no return value specified for UpdateCardDetail")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.DebitCardDetail) error); ok {
		r0 = rf(detail)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateCardStatus provides a mock function with given fields: status
func (_m *DebitCardRepository) UpdateCardStatus(status *models.DebitCardStatus) error {
	ret := _m.Called(status)

	if len(ret) == 0 {
		panic("no return value specified for UpdateCardStatus")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.DebitCardStatus) error); ok {
		r0 = rf(status)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateCardTx provides a mock function with given fields: tx, card
func (_m *DebitCardRepository) UpdateCardTx(tx repositories.DBTransaction, card *models.DebitCard) error {
	ret := _m.Called(tx, card)

	if len(ret) == 0 {
		panic("no return value specified for UpdateCardTx")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(repositories.DBTransaction, *models.DebitCard) error); ok {
		r0 = rf(tx, card)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewDebitCardRepository creates a new instance of DebitCardRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDebitCardRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *DebitCardRepository {
	mock := &DebitCardRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
