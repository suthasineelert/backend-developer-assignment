// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	models "backend-developer-assignment/app/models"

	mock "github.com/stretchr/testify/mock"
)

// DebitCardRepository is an autogenerated mock type for the DebitCardRepository type
type DebitCardRepository struct {
	mock.Mock
}

// CreateCard provides a mock function with given fields: card
func (_m *DebitCardRepository) CreateCard(card *models.DebitCardWithDetails) error {
	ret := _m.Called(card)

	if len(ret) == 0 {
		panic("no return value specified for CreateCard")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.DebitCardWithDetails) error); ok {
		r0 = rf(card)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteCard provides a mock function with given fields: cardID
func (_m *DebitCardRepository) DeleteCard(cardID string) error {
	ret := _m.Called(cardID)

	if len(ret) == 0 {
		panic("no return value specified for DeleteCard")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(cardID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetCardByID provides a mock function with given fields: cardID
func (_m *DebitCardRepository) GetCardByID(cardID string) (*models.DebitCard, error) {
	ret := _m.Called(cardID)

	if len(ret) == 0 {
		panic("no return value specified for GetCardByID")
	}

	var r0 *models.DebitCard
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*models.DebitCard, error)); ok {
		return rf(cardID)
	}
	if rf, ok := ret.Get(0).(func(string) *models.DebitCard); ok {
		r0 = rf(cardID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.DebitCard)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(cardID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCardDesignByID provides a mock function with given fields: cardID
func (_m *DebitCardRepository) GetCardDesignByID(cardID string) (*models.DebitCardDesign, error) {
	ret := _m.Called(cardID)

	if len(ret) == 0 {
		panic("no return value specified for GetCardDesignByID")
	}

	var r0 *models.DebitCardDesign
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*models.DebitCardDesign, error)); ok {
		return rf(cardID)
	}
	if rf, ok := ret.Get(0).(func(string) *models.DebitCardDesign); ok {
		r0 = rf(cardID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.DebitCardDesign)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(cardID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCardDetailByID provides a mock function with given fields: cardID
func (_m *DebitCardRepository) GetCardDetailByID(cardID string) (*models.DebitCardDetail, error) {
	ret := _m.Called(cardID)

	if len(ret) == 0 {
		panic("no return value specified for GetCardDetailByID")
	}

	var r0 *models.DebitCardDetail
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*models.DebitCardDetail, error)); ok {
		return rf(cardID)
	}
	if rf, ok := ret.Get(0).(func(string) *models.DebitCardDetail); ok {
		r0 = rf(cardID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.DebitCardDetail)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(cardID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCardStatusByID provides a mock function with given fields: cardID
func (_m *DebitCardRepository) GetCardStatusByID(cardID string) (*models.DebitCardStatus, error) {
	ret := _m.Called(cardID)

	if len(ret) == 0 {
		panic("no return value specified for GetCardStatusByID")
	}

	var r0 *models.DebitCardStatus
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*models.DebitCardStatus, error)); ok {
		return rf(cardID)
	}
	if rf, ok := ret.Get(0).(func(string) *models.DebitCardStatus); ok {
		r0 = rf(cardID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.DebitCardStatus)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(cardID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCardWithDetailByID provides a mock function with given fields: cardID
func (_m *DebitCardRepository) GetCardWithDetailByID(cardID string) (*models.DebitCardWithDetails, error) {
	ret := _m.Called(cardID)

	if len(ret) == 0 {
		panic("no return value specified for GetCardWithDetailByID")
	}

	var r0 *models.DebitCardWithDetails
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*models.DebitCardWithDetails, error)); ok {
		return rf(cardID)
	}
	if rf, ok := ret.Get(0).(func(string) *models.DebitCardWithDetails); ok {
		r0 = rf(cardID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.DebitCardWithDetails)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(cardID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCardWithDetailByUserID provides a mock function with given fields: userID
func (_m *DebitCardRepository) GetCardWithDetailByUserID(userID string) ([]*models.DebitCardWithDetails, error) {
	ret := _m.Called(userID)

	if len(ret) == 0 {
		panic("no return value specified for GetCardWithDetailByUserID")
	}

	var r0 []*models.DebitCardWithDetails
	var r1 error
	if rf, ok := ret.Get(0).(func(string) ([]*models.DebitCardWithDetails, error)); ok {
		return rf(userID)
	}
	if rf, ok := ret.Get(0).(func(string) []*models.DebitCardWithDetails); ok {
		r0 = rf(userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.DebitCardWithDetails)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCardsByUserID provides a mock function with given fields: userID
func (_m *DebitCardRepository) GetCardsByUserID(userID string) ([]*models.DebitCard, error) {
	ret := _m.Called(userID)

	if len(ret) == 0 {
		panic("no return value specified for GetCardsByUserID")
	}

	var r0 []*models.DebitCard
	var r1 error
	if rf, ok := ret.Get(0).(func(string) ([]*models.DebitCard, error)); ok {
		return rf(userID)
	}
	if rf, ok := ret.Get(0).(func(string) []*models.DebitCard); ok {
		r0 = rf(userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.DebitCard)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateCard provides a mock function with given fields: card
func (_m *DebitCardRepository) UpdateCard(card *models.DebitCard) error {
	ret := _m.Called(card)

	if len(ret) == 0 {
		panic("no return value specified for UpdateCard")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.DebitCard) error); ok {
		r0 = rf(card)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateCardByID provides a mock function with given fields: cardID, userID, updateFn
func (_m *DebitCardRepository) UpdateCardByID(cardID string, userID string, updateFn func(*models.DebitCardWithDetails) (bool, error)) error {
	ret := _m.Called(cardID, userID, updateFn)

	if len(ret) == 0 {
		panic("no return value specified for UpdateCardByID")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, func(*models.DebitCardWithDetails) (bool, error)) error); ok {
		r0 = rf(cardID, userID, updateFn)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateCardDesign provides a mock function with given fields: design
func (_m *DebitCardRepository) UpdateCardDesign(design *models.DebitCardDesign) error {
	ret := _m.Called(design)

	if len(ret) == 0 {
		panic("no return value specified for UpdateCardDesign")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.DebitCardDesign) error); ok {
		r0 = rf(design)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateCardDetail provides a mock function with given fields: detail
func (_m *DebitCardRepository) UpdateCardDetail(detail *models.DebitCardDetail) error {
	ret := _m.Called(detail)

	if len(ret) == 0 {
		panic("no return value specified for UpdateCardDetail")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.DebitCardDetail) error); ok {
		r0 = rf(detail)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateCardStatus provides a mock function with given fields: status
func (_m *DebitCardRepository) UpdateCardStatus(status *models.DebitCardStatus) error {
	ret := _m.Called(status)

	if len(ret) == 0 {
		panic("no return value specified for UpdateCardStatus")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.DebitCardStatus) error); ok {
		r0 = rf(status)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewDebitCardRepository creates a new instance of DebitCardRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDebitCardRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *DebitCardRepository {
	mock := &DebitCardRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
